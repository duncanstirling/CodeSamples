                    GIT INSTRUCTIONS
########################################################## 
1. START BY CLONING A REPOSITORY

# EITHER SPECIFY A FILE NAME i.e. AAA or it will default to the name of the repository
# cd INTO AAA AND PROCEED AS IN PART2 BELOW.
				
git clone https://github.com/duncanstirling/CodeSamples.git AAA								
########################################################## 
2. START A NEW REPO AND ADD ORIGIN

# START A NEW REPO
git init

# CREATE A LOCALLY BRANCH, ADD SOMETHING (FROM HERE ONWARDS APPLIES TO CLONED REPOS TOO)
git checkout -b branch2
echo "some info" >> file3.txt

# ADD AND COMMIT THE NEW CONTENT TO THE BRANCH
git add .
git commit -m "updated laravel8"

# THE BRANCH IS CURRENTLY HEADLESS, ADD A REMOTE ORIGIN IN A GITHUB ACCOUNT
git remote add origin https://github.com/duncanstirling/CodeSamples

# PUSH THE NEW BRANCH OUT TO ITS NEW REMOTE ORIGIN
git push -u origin branch2

# AFTER ADDING AN ORIGIN CHECKOUT A REMOTE BRANCH, FIRST DOWNLOAD REFERENCES FROM THE REMOTE REPOSITORY TO THE LOCAL MACHINE
git fetch
git checkout branch2

# CHECKOUT AN EXISTING REMOTE BRANCH AND MAKE SURE IT IS UPTODATE
git checkout branch3
git pull

# MERGE BRANCH2 WITH BRANCH3 THEN UPDATE REMOTE BRANCH
git merge branch2
git commit -m "merging branch2 with branch3"
git push 

# IF THERE IS AN UNRELATED HISTORIES ERROR WHEN MERGING
# THIS WOULD MERGE BRANCH7 TO YOUR CURRENT BRANCH
git merge --allow-unrelated-histories branch7

# STASH SAVES VERSIONED FILES WITH UNCOMITTED CHANGES
# SAVE TO THE STASH
git stash

# SHOW WHAT HAS BEEN STASHED
git stash list

# RETREIVE THE UNCOMITTED WORK FROM THE STASH
git stash pop

# REVIEW CHANGES BEFORE COMMITTING THEM
git diff

